services:
  db:
    container_name: db_test
    build:
      context: .\docker_db
      dockerfile: Dockerfile.db
    ports:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: "pg_isready"
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - volume_name:/var/lib/postgresql/data
    networks:
    - main
  adminer:
    container_name: adminer_test
    image: adminer
    restart: always
    ports:
      - 48483:48483
    depends_on:
      db:
        condition: service_healthy
    networks:
    - main
  front:
    container_name: front
    build:
      context: .
      dockerfile: Dockerfile.front
    ports:
      - 5173:5173
    depends_on:
      back:
        condition: service_healthy
    networks:
    - main
  back:
    container_name: back
    build:
      context: .
      dockerfile: Dockerfile.back
    ports:
      - 8000:8000
    environment:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      DB_PORT: 5432
    healthcheck:
      test: "curl http://localhost:8000/business_units"
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
    - main

networks:
  main:

volumes:
  volume_name:                                 # <- Rename "volume_name"
    name: test_mtech     